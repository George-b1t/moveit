{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/george/Documentos/JS/moveit-next/src/components/Countdown.tsx\";\nimport { useState, useEffect } from \"react\";\nimport styles from '../styles/components/Countdown.module.css';\nexport function Countdown() {\n  const {\n    0: time,\n    1: setTime\n  } = useState(1500);\n  const {\n    0: isActive,\n    1: setIsActive\n  } = useState(false);\n  const minutes = Math.floor(time / 60);\n  const seconds = time % 60;\n  const [minuteLeft, minuteRight] = String(minutes).padStart(2, '0').split('');\n  const [secondLeft, secondRight] = String(seconds).padStart(2, '0').split('');\n\n  function startCountdown() {\n    setIsActive(true);\n  }\n\n  function resetCountdown() {\n    setIsActive(false);\n    setTime(1500);\n  }\n\n  useEffect(() => {\n    if (isActive && time > 0) {\n      setTimeout(() => {\n        setTime(time - 1);\n      }, 1000);\n    }\n  }, [isActive, time]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.countdownContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \":\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), isActive ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: resetCountdown,\n      type: \"button\",\n      className: `${styles.countdownButton} ${styles.countdownButtonActive}`,\n      children: \"Abandonar Ciclo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startCountdown,\n      type: \"button\",\n      className: styles.countdownButton,\n      children: \"Iniciar um ciclo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/home/george/Documentos/JS/moveit-next/src/components/Countdown.tsx"],"names":["useState","useEffect","styles","Countdown","time","setTime","isActive","setIsActive","minutes","Math","floor","seconds","minuteLeft","minuteRight","String","padStart","split","secondLeft","secondRight","startCountdown","resetCountdown","setTimeout","countdownContainer","countdownButton","countdownButtonActive"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,OAAOC,MAAP,MAAmB,2CAAnB;AAEA,OAAO,SAASC,SAAT,GAAqB;AAC1B,QAAM;AAAA,OAAEC,IAAF;AAAA,OAAQC;AAAR,MAAoBL,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM;AAAA,OAAEM,QAAF;AAAA,OAAYC;AAAZ,MAA4BP,QAAQ,CAAC,KAAD,CAA1C;AAEA,QAAMQ,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWN,IAAI,GAAG,EAAlB,CAAhB;AACA,QAAMO,OAAO,GAAGP,IAAI,GAAG,EAAvB;AAEA,QAAM,CAAEQ,UAAF,EAAcC,WAAd,IAA8BC,MAAM,CAACN,OAAD,CAAN,CAAgBO,QAAhB,CAAyB,CAAzB,EAA4B,GAA5B,EAAiCC,KAAjC,CAAuC,EAAvC,CAApC;AACA,QAAM,CAAEC,UAAF,EAAcC,WAAd,IAA8BJ,MAAM,CAACH,OAAD,CAAN,CAAgBI,QAAhB,CAAyB,CAAzB,EAA4B,GAA5B,EAAiCC,KAAjC,CAAuC,EAAvC,CAApC;;AAEA,WAASG,cAAT,GAA0B;AACxBZ,IAAAA,WAAW,CAAC,IAAD,CAAX;AACD;;AAED,WAASa,cAAT,GAA0B;AACxBb,IAAAA,WAAW,CAAC,KAAD,CAAX;AACAF,IAAAA,OAAO,CAAC,IAAD,CAAP;AACD;;AAEDJ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAGK,QAAQ,IAAIF,IAAI,GAAG,CAAtB,EAAyB;AACvBiB,MAAAA,UAAU,CAAC,MAAM;AACfhB,QAAAA,OAAO,CAACD,IAAI,GAAG,CAAR,CAAP;AACD,OAFS,EAEP,IAFO,CAAV;AAGD;AACF,GANQ,EAMN,CAACE,QAAD,EAAWF,IAAX,CANM,CAAT;AAQA,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEF,MAAM,CAACoB,kBAAvB;AAAA,8BACE;AAAA,gCACE;AAAA,oBAAQV;AAAR;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBAAQC;AAAR;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eAME;AAAA,gCACE;AAAA,oBAAQI;AAAR;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBAAQC;AAAR;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAaIZ,QAAQ,gBACR;AACE,MAAA,OAAO,EAAEc,cADX;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,MAAA,SAAS,EAAG,GAAElB,MAAM,CAACqB,eAAgB,IAAGrB,MAAM,CAACsB,qBAAsB,EAHvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADQ,gBASR;AACE,MAAA,OAAO,EAAEL,cADX;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,MAAA,SAAS,EAAEjB,MAAM,CAACqB,eAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAtBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiCD","sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nimport styles from '../styles/components/Countdown.module.css';\r\n\r\nexport function Countdown() {\r\n  const [ time, setTime ] = useState(1500);\r\n  const [ isActive, setIsActive ] = useState(false);\r\n\r\n  const minutes = Math.floor(time / 60);\r\n  const seconds = time % 60;\r\n\r\n  const [ minuteLeft, minuteRight ] = String(minutes).padStart(2, '0').split('');\r\n  const [ secondLeft, secondRight ] = String(seconds).padStart(2, '0').split('');\r\n\r\n  function startCountdown() {\r\n    setIsActive(true);\r\n  }\r\n\r\n  function resetCountdown() {\r\n    setIsActive(false);\r\n    setTime(1500);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(isActive && time > 0) {\r\n      setTimeout(() => {\r\n        setTime(time - 1);\r\n      }, 1000)\r\n    }\r\n  }, [isActive, time]);\r\n\r\n  return (\r\n    <div>\r\n      <div className={styles.countdownContainer}>\r\n        <div>\r\n          <span>{ minuteLeft }</span>\r\n          <span>{ minuteRight }</span>\r\n        </div>\r\n        <span>:</span>\r\n        <div>\r\n          <span>{ secondLeft }</span>\r\n          <span>{ secondRight }</span>\r\n        </div>\r\n      </div>\r\n\r\n      { isActive ? (\r\n        <button\r\n          onClick={resetCountdown}\r\n          type=\"button\"\r\n          className={`${styles.countdownButton} ${styles.countdownButtonActive}`}\r\n        >\r\n          Abandonar Ciclo\r\n        </button>\r\n      ) : (\r\n        <button\r\n          onClick={startCountdown}\r\n          type=\"button\"\r\n          className={styles.countdownButton}\r\n        >\r\n          Iniciar um ciclo\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}